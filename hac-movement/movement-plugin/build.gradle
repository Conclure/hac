/*
 * MIT License
 *
 * Copyright (c) 2021 Justin Heflin
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 *
 */

plugins {
    id 'com.github.johnrengelman.shadow' version '6.1.0'
}

ext {
    PACKAGED_VERSIONS = file(sourceSets.main.resources.srcDirs[0].path + "/packaged_versions.txt")
}

group 'com.heretere'
version rootProject.version

dependencies {
    implementation project(PROJECT_PROXY)
    implementation project(PROJECT_ALL_VERSIONS)

    compileOnlyApi 'org.spigotmc:plugin-annotations:1.2.3-SNAPSHOT'
    annotationProcessor 'org.spigotmc:plugin-annotations:1.2.3-SNAPSHOT'
}

shadowJar {
    outputs.upToDateWhen { return false } //Will always rebuild fatjar since version inclusion can be changed.
    doFirst {
        dependencies {
            /* excludes version is include is set to false for it */
            VERSIONS.each {
                k, v ->
                    if (!v.include) {
                        exclude PROJECT_ALL_VERSIONS.toString() + v.projectAppend.toString()
                    }
            }
        }

        /* Relocates all versions to their correct name: VERSIONS can be found in rootProject build.gradle*/
        VERSIONS.each {
            k, v ->
                relocate VERSION_PACKAGE_ABSOLUTE.toString() + v.replacer.find.toString(),
                    VERSION_PACKAGE_ABSOLUTE.toString() + v.replacer.replace.toString()
        }

        /* Global relocations */
        relocate 'com.flowpowered.math', 'com.heretere.hac.core.libs.math'
        relocate 'org.apache.commons.lang3', 'com.heretere.hac.core.libs.lang3'

        /* module specific */
        relocate 'com.heretere.hac.util', 'com.heretere.hac.movement.util'

        archiveFileName = 'HAC.Core.jar'
        destinationDirectory = SHADOW_JAR_OUTPUT_DIR
    }
    doLast {
        /* Delete packaged versions because we only need them at compile time */
        delete PACKAGED_VERSIONS
        delete file(PACKAGED_VERSIONS.getParentFile())
    }
}

task preProcessResources {
    doFirst {
        /* Write to a packaged versions file to include all versions packaged in this jar */
        PACKAGED_VERSIONS.getParentFile().mkdirs()
        PACKAGED_VERSIONS.withWriter {
            out ->
                VERSIONS.each {
                    k, v ->
                        if (v.spigotJar.exists() && v.include) {
                            out.println(k)
                        }
                }
        }
    }
}

processResources {
    dependsOn preProcessResources
    outputs.upToDateWhen { return false } //Will always processResources since version inclusion can be changed.
    duplicatesStrategy DuplicatesStrategy.INCLUDE
}