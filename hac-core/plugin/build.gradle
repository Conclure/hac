import org.apache.tools.ant.filters.ReplaceTokens

plugins {
    id 'com.github.johnrengelman.shadow' version '6.1.0'
}

group 'com.heretere'
version rootProject.version

dependencies {
    compileOnlyApi(LATEST_SPIGOT)

    api(project(PROJECT_PROXY))
    api(project(PROJECT_ALL_VERSIONS))
}

shadowJar {
    outputs.upToDateWhen { return false } //Will always rebuild fatjar since version inclusion can be changed.
    doFirst {
        dependencies {
            /* excludes version is include is set to false for it */
            VERSIONS.each { k, v ->
                if (!v.include) {
                    exclude(PROJECT_ALL_VERSIONS.toString() + v.projectAppend.toString())
                }
            }
        }

        /* Relocates all versions to their correct name: VERSIONS can be found in rootProject build.gradle*/
        VERSIONS.each { k, v ->
            relocate VERSION_PACKAGE_ABSOLUTE.toString() + v.replacer.find.toString(),
                    VERSION_PACKAGE_ABSOLUTE.toString() + v.replacer.replace.toString()
        }

        /* module specific */
        relocate 'mikera', 'com.heretere.hac.core.libs.mikera'
        relocate 'us.bpsm', 'com.heretere.hac.core.libs'
        relocate 'com.heretere.hac.util', 'com.heretere.hac.core.util'

        archiveFileName = 'HAC.Core.jar'
    }
}

processResources {
    doFirst {
        File availableVersions = new File(sourceSets.main.resources.srcDirs[0].path, "available_versions.txt")
        availableVersions.withWriter {
            out ->
                VERSIONS.each {
                    k, v ->
                        if (v.include) {
                            out.println(k)
                        }
                }
        }
    }
    duplicatesStrategy = DuplicatesStrategy.INCLUDE
    from(sourceSets.main.resources.srcDirs) {
        filter ReplaceTokens, tokens: [version: version]
    }
}